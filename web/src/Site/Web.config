<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="modelBuilderPipeline" type="Sdl.Web.Tridion.Configuration.ModelBuilderPipelineConfiguration, Sdl.Web.Tridion" />
  </configSections>
  <appSettings>
    <add key="webpages:Version" value="3.0.0.0" />
    <add key="webpages:Enabled" value="false" />

      <!-- Use a low value for DD4T.CacheSettings.XYZ on Staging to prevent caching issues with XPM Session Preview. The setting is in seconds. -->
    <add key="DD4T.CacheSettings.Default" value="5" />
    <!-- DD4T cache Time-To-Live settings can also be specified per cache region. DXA Framework uses the following cache regions:
    <add key="DD4T.CacheSettings.PageModel" value="60" />
    <add key="DD4T.CacheSettings.IncludePageModel" value="300" />
    <add key="DD4T.CacheSettings.EntityModel" value="60" />
    <add key="DD4T.CacheSettings.Navigation_Static" value="60" />
    <add key="DD4T.CacheSettings.Navigation_Dynamic" value="60" />
    <add key="DD4T.CacheSettings.NavTaxonomy" value="300" />
    -->

    <!-- If viewModel-caching is set to "true", DXA Page, Region and Entity Models will be cached in separate DD4T cache Regions (see above).
         This improves performance, but could lead to issues with dynamically populated Entity Models which don't override the ViewModel.DeepCopy() method (introduced in DXA 1.6).
         In case of issues with dynamically populated Entity Models, try disabling View Model caching. -->
    <add key="viewModel-caching" value="true"/>

    <!-- If admin.refresh.enabled is set to "true", the configuration settings cache can be flushed using the "/admin/refresh" URL. -->
    <add key="admin.refresh.enabled" value="true" />

    <!-- SDL Web 8 CDaaS configuration settings: -->
    <add key="discovery-service-uri" value="http://dxadevweb8.ams.dev:8082/discovery.svc" />   
    <add key="cid-service-proxy-pattern" value="/cid*"/>
    <!-- Use the setting below if you need to map localhost to a specific hostname 
         so the CID service can access resources. On some environments localhost may not
         resolve correctly to the external hostname.
    <add key="cid-localhost" value="some_host_name"/> -->
    <add key="log-level" value="INFO" />
    <add key="log-rolling" value="true" />
    <add key="log-max-log-size" value="50000" />
    <add key="log-output" value="C:\Temp\logs\cd_client.log" />
    <!-- CIL caching can be enabled on Staging; CIL 8.1.1+ will bypass the cache for XPM Session Preview.  The service-caching-expiration setting is in seconds. -->
    <add key="service-caching" value="true" />
    <add key="service-caching-expiration" value="60" />
    <add key="oauth-enabled" value="false" />
    <add key="oauth-client-id" value="cduser" />
    <add key="oauth-client-secret" value="CDUserP@ssw0rd" />  
  </appSettings>
  <system.web>
    <globalization resourceProviderFactoryType="Sdl.Web.Mvc.Configuration.ResourceProviderFactory, Sdl.Web.Mvc" />
    <customErrors mode="Off" />
    <!-- We need requestPathInvalidCharacters at the moment so the we can specify a port on CID proxy uri -->   
    <httpRuntime targetFramework="4.5.2" requestPathInvalidCharacters="&lt;,&gt;,*,%,&amp;,?" />
    <compilation debug="true" targetFramework="4.5.2" />

      <!--
        Enabling request validation in View pages would cause validation to occur after the input has already been processed by the controller. 
        By default MVC performs request validation before a controller processes the input. To change this behavior apply the ValidateInputAttribute to a controller or action.
        -->
      <pages validateRequest="false"
        pageParserFilterType="System.Web.Mvc.ViewTypeParserFilter, System.Web.Mvc, Version=5.1.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"
        pageBaseType="System.Web.Mvc.ViewPage, System.Web.Mvc, Version=5.1.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"
        userControlBaseType="System.Web.Mvc.ViewUserControl, System.Web.Mvc, Version=5.1.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
      <controls>
        <add assembly="System.Web.Mvc, Version=5.1.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" namespace="System.Web.Mvc" tagPrefix="mvc"/>
      </controls>
    </pages>
  </system.web>
  <system.webServer>
    <httpErrors errorMode="DetailedLocalOnly" existingResponse="PassThrough" />
    <staticContent>
      <remove fileExtension=".json" />
      <mimeMap fileExtension=".json" mimeType="application/json" />
    </staticContent>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true">
      <add name="AmbientFrameworkModule" type="Tridion.ContentDelivery.AmbientData.HttpModule" preCondition="managedHandler" />
      <!-- This module can be enabled if you use the ContextualMediaHelper implemention. Refer to the IMediaHelper implementation mapping in your unity configuration. 
      <add name="ContextualImageProxyModule" type="Sdl.Web.Context.Image.Proxy.ContextualImageProxyModule" />
      -->
      <add name="DxaStaticContentModule" type="Sdl.Web.Mvc.Statics.StaticContentModule" />
    </modules>
    <defaultDocument>
      <files>
        <clear />
        <add value="index.html" />
      </files>
    </defaultDocument>
    <handlers>
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="log4net" publicKeyToken="669e0ddf0bb1aa2a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.2.13.0" newVersion="1.2.13.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.0" newVersion="3.5.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.ServiceLocation" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.3.0.0" newVersion="1.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-5.1.0.0" newVersion="5.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.5.0.0" newVersion="5.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="6.0.0.0" newVersion="7.0.0.0" />
      </dependentAssembly>
        <!-- Currently DD4T is referencing 8.1.0.1239 of the CIL but we wish to use 8.3.0 -->
        <dependentAssembly>
            <assemblyIdentity name="Tridion.ContentDelivery" publicKeyToken="ddfc895746e5ee6b" culture="neutral" />
            <bindingRedirect oldVersion="8.1.0.1239" newVersion="8.3.0.1003" />
        </dependentAssembly>
        <dependentAssembly>
            <assemblyIdentity name="Tridion.ContentDelivery.AmbientData" publicKeyToken="ddfc895746e5ee6b" culture="neutral" />
            <bindingRedirect oldVersion="8.1.0.1239" newVersion="8.3.0.1003" />
        </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <log4net configSource="Log.config" />
  <unity configSource="Unity.config" />
  <!-- 
  NOTE: Model Builder Pipeline Configuration should only be used for advanced (SDL-owned) modules.
  This is not a public extension point and will change considerably in a future release.
  -->
  <modelBuilderPipeline>
    <add type="Sdl.Web.Tridion.Mapping.DefaultModelBuilder, Sdl.Web.Tridion" />
  </modelBuilderPipeline>
</configuration>